from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, confusion_matrix
from sklearn import datasets
import numpy as np

iris = datasets.load_iris()
x = iris.data
y = iris.target
class_names = iris.target_names

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)


classifier = KNeighborsClassifier(n_neighbors=3)
classifier.fit(x_train, y_train)


y_pred = classifier.predict(x_test)

print("Predictions and Accuracy for Each Test Instance:")
for i in range(len(y_test)):
    predicted_class = class_names[y_pred[i]]
    actual_class = class_names[y_test[i]]
    correct = y_pred[i] == y_test[i]
    print(f"Predicted: {predicted_class}, Actual: {actual_class}, Correct: {correct}")

print('\nConfusion Matrix:')
print(confusion_matrix(y_test, y_pred))

print('\nAccuracy Metrics:')
print(classification_report(y_test, y_pred, target_names=class_names))
